@page
@model Workspace.IndexModel
@using Topsis.Domain.Common
@{
    var currentStatus = Model.Data.Workspace.CurrentStatus;
    var hasReports = currentStatus == Domain.WorkspaceStatus.Finalized && Model.Data.Workspace.Reports?.Any() == true;
    var noResultsMessage = string.Empty;
    var canVote = currentStatus == Domain.WorkspaceStatus.AcceptingVotes;
    switch (Model.Data.Workspace.CurrentStatus)
    {
        case Domain.WorkspaceStatus.Draft:
            noResultsMessage = "Workspace is not ready yet.";
            break;
        case Domain.WorkspaceStatus.Published:
            noResultsMessage = "Workspace voting not started yet.";
            break;
        case Domain.WorkspaceStatus.AcceptingVotes:
            noResultsMessage = $"Workspace is currently accepting votes. If you've already voted, refresh this page in a few minutes.";
            break;
        case Domain.WorkspaceStatus.Finalized:
            noResultsMessage = "Workspace voting completed. Waiting for the results.";
            break;
        case Domain.WorkspaceStatus.Archived:
            noResultsMessage = "Workspace has archived.";
            break;
        default:
            break;
    }
}

@section HeadScripts
{
    <environment include="Development">
        <script src="~/lib/chartjs/chart.js"></script>
    </environment>
    <environment exclude="Development">
        <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.5.1/chart.min.js"
                integrity="sha512-Wt1bJGtlnMtGP0dqNFH1xlkLBNpEodaiQ8ZN5JLA5wpc1sUlk/O5uuOMNgvzddzkpvZ9GLyYNa8w2s7rqiTk5Q=="
                asp-fallback-src="~/lib/chartjs/chart.min.js"
                crossorigin="anonymous"
                referrerpolicy="no-referrer"></script>
    </environment>

    <script src="https://cdn.jsdelivr.net/npm/d3@7"></script>
}

<div class="row">
    <div class="col-md-6">
        <h2>@Model.Data.Workspace.Title</h2>
        @if (hasReports == false)
        {
            <p class="text-danger">@noResultsMessage</p>
        }

        <p>@Model.Data.Workspace.Description</p>
        @if (canVote)
        {
            <p>You can vote <a href="@Url.Page("Vote", new { id = Model.Data.Workspace.Id.Hash() })">here</a>.</p>
        }
    </div>
    @if (hasReports)
    {
        <div class="col-md-6">

            <div class="col-md-9 float-right">
                <table class="table">
                    <thead>
                        <tr>
                            @*<th>Algorithm</th>*@
                            <th>Created</th>
                            <th>Finished</th>
                            <th>Votes</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model.Data.Workspace.Reports)
                        {
                            <tr>
                                @*<td>@item.Algorithm</td>*@
                                <td>@item.CreatedAtUtc.FormatUtcDate("yyyy/MM/dd HH:mm")</td>
                                <td>@item.CompletedAtUtc?.FormatUtcDate("yyyy/MM/dd HH:mm")</td>
                                <td class="text-center">@item.VotesCount</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>


        </div>
    }
</div>


@if (hasReports)
{
    <div class="row">

        <div class="col-md-6">
            <h3>Compare Consensus</h3>
            <canvas id="chCompareConsensus"></canvas>
        </div>

        <div class="col-md-6">
            <h3>Alternatives</h3>
            <canvas id="chAlternatives"></canvas>
        </div>
    </div>



    <div class="row">

        <div class="col-md-12">
            <h3>Stakeholders Consensus</h3>
            <canvas id="chConsensus2"></canvas>
        </div>
    </div>

    @*<div class="row">

        <div class="col-md-12">
            <h3>Temp</h3>
            <canvas id="chConsensus4"></canvas>
        </div>
    </div>*@
}
@section Scripts {

    <script>
        function highlight() {
            console.log('highlight');

            return (ctx) => {
                var v = ctx.parsed.y;
                var c = v < -50 ? '#D60000'
                    : v < 0 ? '#F46300'
                        : v < 50 ? '#0358B6'
                            : '#44DE28';

                return Utils.transparentize(c, 1 - Math.abs(v / 150));
            };
        }

        let configCompareConsensus = JSON.parse('@Html.Raw(Model.ConsensusCompareReportJson)');
        var conChart = new Chart(document.getElementById('chCompareConsensus'), configCompareConsensus);

        let configAlternatives = JSON.parse('@Html.Raw(Model.AlternativesReportJson)');
        var altChart = new Chart(document.getElementById('chAlternatives'), configAlternatives);

        let configConsensus = JSON.parse('@Html.Raw(Model.ConsensusReportJson)');
        var conChart2 = new Chart(document.getElementById('chConsensus2'), configConsensus);

        //let config = {
        //    "type": "bar", "data": {
        //        "labels": ["S1", "S2", "S3", "S4"],
        //        "datasets": [{
        //            "options":
        //            {
        //                "elements":
        //                {
        //                    "bar":
        //                        { "backgroundColor": "grey" }
        //                }
        //            }, "type": "bar", "data": [0.983, 0.842, 0.658, 0.806], "label": "Consensus", "backgroundColor": "rgba(255, 99, 132, 0.2)", "borderColor": "rgb(255, 99, 132)", "fill": true, "pointBackgroundColor": "rgb(255, 99, 132)", "pointBorderColor": "#fff", "pointHoverBackgroundColor": "#fff", "pointHoverBorderColor": "rgb(255, 99, 132)"
        //        }, { "options": null, "type": "line", "data": [0.82225, 0.82225, 0.82225, 0.82225], "label": "Average Consensus", "backgroundColor": "rgba(255, 99, 132, 0.2)", "borderColor": "rgb(255, 99, 132)", "fill": false, "pointBackgroundColor": null, "pointBorderColor": null, "pointHoverBackgroundColor": null, "pointHoverBorderColor": null }]
        //    }
        //};
        //var conChart4 = new Chart(document.getElementById('chConsensus4'), configConsensus);

    </script>
}

